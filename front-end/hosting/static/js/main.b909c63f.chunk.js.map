{"version":3,"sources":["store.js","actions.js","recipe-header.jsx","recipe-list.jsx","recipe.jsx","home-screen.jsx","nav.jsx","top-bar.jsx","add-a-recipe.jsx","App.js","serviceWorker.js","index.js"],"names":["store","Store","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_data","listeners","id","data","callback","React","Component","getRecipes","Http","XMLHttpRequest","open","send","onreadystatechange","e","add","responseText","JSON","parse","RecipeHeader","recipeHeader","react_default","a","createElement","className","onClick","partial","changePage","pages","recipe","recipeId","title","author","cook_time","src","img_url","alt","RecipeList","recipes","map","r","i","recipe_header_RecipeHeader","key","Recipe","state","dataListenerRecipe","bind","assertThisInitialized","dataListenerRecipes","listen","setState","ingredients","ing","recipe_list_RecipeList","HomeScreen","Nav","navOptions","option","TopBar","type","placeholder","AddARecipe","payload","steps","_createInput","_createInputList","target","_this2","value","onChange","t","event","localPayload","_this3","slice","push","element","home","addARecipe","fn","Array","prototype","args","arguments","apply","concat","App","page","home_screen_HomeScreen","recipe_Recipe","pageState","add_a_recipe_AddARecipe","length","undefined","top_bar_TopBar","nav_Nav","values","_getPage","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b909c63f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Store extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this._data = {};\r\n        this.listeners = [];\r\n    }\r\n\r\n    add(id, data) {\r\n        this._data[id] = data;\r\n        this.listeners[id](data);\r\n    }\r\n\r\n    listen(id, callback){\r\n        this.listeners[id] = callback;\r\n    }\r\n}\r\n\r\nconst store = new Store();\r\nexport {store};","import {store} from \"./store\";\r\n\r\nexport function getRecipes() {\r\n    const Http = new XMLHttpRequest();\r\n    const url = \"http://3.17.29.161/recipes\";\r\n    Http.open(\"GET\", url);\r\n    Http.send();\r\n    Http.onreadystatechange = (e) => {\r\n        store.add(\"recipes\", Http.responseText ? JSON.parse(Http.responseText) : []);\r\n    };\r\n}","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {pages, partial} from \"./App\";\r\n\r\nclass RecipeHeader extends Component {\r\n    static propTypes = {\r\n        recipeHeader: PropTypes.object,\r\n        changePage: PropTypes.func\r\n    };\r\n\r\n    render() {\r\n        const recipeHeader = this.props.recipeHeader || {};\r\n        return (\r\n            <button className=\"recipe-header\" onClick={partial(\r\n                this.props.changePage,\r\n                pages.recipe,\r\n                {recipeId: recipeHeader.id}\r\n            )}>\r\n                <h3>{recipeHeader.title}</h3>\r\n                <h4>{recipeHeader.author}</h4>\r\n                <p>{recipeHeader.cook_time}</p>\r\n                <img\r\n                    src={recipeHeader.img_url}\r\n                    alt={\"recipe\"}\r\n                />\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nexport {RecipeHeader};","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './App.css';\r\nimport {RecipeHeader} from \"./recipe-header\";\r\n\r\nclass RecipeList extends Component {\r\n    static propTypes = {\r\n        recipes: PropTypes.array,\r\n        changePage: PropTypes.func\r\n    };\r\n\r\n    render() {\r\n        const recipes = this.props.recipes || [] ;\r\n        return (\r\n            <div className=\"recipe-list\">\r\n                <h2>{\"Recipe List\"}</h2>\r\n                {recipes ? recipes.map((r, i)=>\r\n                    <RecipeHeader recipeHeader={r} key={r.title + i} changePage={this.props.changePage}/>\r\n                ) : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport {RecipeList};","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './App.css';\r\nimport {getRecipes} from \"./actions\";\r\nimport {store} from \"./store\";\r\nimport {RecipeList} from \"./recipe-list\";\r\n\r\nclass Recipe extends Component {\r\n    static propTypes = {\r\n        recipeId: PropTypes.string\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.dataListenerRecipe = this.dataListenerRecipe.bind(this);\r\n        this.dataListenerRecipes = this.dataListenerRecipes.bind(this);\r\n        store.listen(\"recipes\", this.dataListenerRecipes);\r\n        store.listen(\"recipe\" + props.recipeId, this.dataListenerRecipe);\r\n    }\r\n\r\n    dataListenerRecipe(data) {\r\n        this.setState({recipe: data})\r\n    }\r\n\r\n    dataListenerRecipes(data) {\r\n        this.setState({recipes: data})\r\n    }\r\n\r\n    componentDidMount() {\r\n        getRecipes();\r\n    }\r\n\r\n    render() {\r\n        const recipes = this.state.recipes || [];\r\n        const recipe = this.state.recipe || {};\r\n        return (\r\n            <div className=\"recipe\">\r\n                <section className={\"recipe-info\"}>\r\n                    <div className={\"recipe-title-area\"}>\r\n                        <h2>{recipe.title || \"--\"}</h2>\r\n                        <p className={\"author\"}>{recipe.author || \"--\"}</p>\r\n                    </div>\r\n                    <div className={\"img-container\"}>\r\n                        <img\r\n                            src={\"https://i.imgflip.com/1ujwer.jpg\"}\r\n                            alt={\"Recipe\"}\r\n                        />\r\n                    </div>\r\n                    <h4>{\"Cook Time:\"}</h4>\r\n                    <p className={\"cook-time\"}>{recipe.cook_time || \"--\"}</p>\r\n                    <h4 className={\"ingredients\"}>{\"Ingredients:\"}</h4>\r\n                    {(recipe.ingredients || []).map((ing) =>\r\n                        <p className={\"ingredient\"}>{ing}</p>\r\n                    )}\r\n                    <h4 className={\"instructions\"}>{\"Instructions:\"}</h4>\r\n                    {(recipe.ingredients || []).map((ing) =>\r\n                        <p className={\"ingredient\"}>{ing}</p>\r\n                    )}\r\n                </section>\r\n                <section className={\"Related-recipes\"}>\r\n                    <h4>{\"Other recipes by this user:\"}</h4>\r\n                    <RecipeList recipes={recipes}/>\r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport {Recipe};","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './App.css';\r\nimport {RecipeList} from \"./recipe-list\";\r\nimport {store} from \"./store\";\r\nimport {getRecipes} from \"./actions\";\r\n\r\nclass HomeScreen extends Component {\r\n    static propTypes = {\r\n        text: PropTypes.string,\r\n        changePage: PropTypes.func\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.dataListenerRecipes = this.dataListenerRecipes.bind(this);\r\n        store.listen(\"recipes\", this.dataListenerRecipes);\r\n    }\r\n\r\n    dataListenerRecipes(data) {\r\n        this.setState({recipes: data})\r\n    }\r\n\r\n    componentDidMount(){\r\n        getRecipes();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"home-screen\">\r\n                <RecipeList recipes={this.state.recipes}/>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport {HomeScreen};","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './App.css';\r\nimport {partial} from \"./App\";\r\n\r\nclass Nav extends Component {\r\n    static propTypes = {\r\n        navOptions: PropTypes.array,\r\n        changePage: PropTypes.func\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"nav\">\r\n                {this.props.navOptions.map((option)=>(\r\n                    <button key={option} onClick={partial(this.props.changePage, option)}>{option}</button>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport {Nav};","import React, {Component} from 'react';\r\nimport './App.css';\r\n\r\nclass TopBar extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"top-bar\">\r\n                <h2>{\"Millennial Recipe System\"}</h2>\r\n                <input type=\"text\" placeholder=\"Search...\"/>\r\n                <button>{\"🔎\"}</button>\r\n                <button>{\"Add a Recipe...\"}</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport {TopBar};","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport {partial} from \"./App\";\r\n\r\nclass AddARecipe extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            payload: {\r\n                title: \"\",\r\n                author: \"\",\r\n                cook_time: \"\",\r\n                img_url: \"\",\r\n                ingredients: [\"\"],\r\n                steps: [\"\"]\r\n            }\r\n        };\r\n        this._createInput = this._createInput.bind(this);\r\n        this._createInputList = this._createInputList.bind(this);\r\n    }\r\n\r\n    _createInput(target) {\r\n        return <input type=\"text\" value={this.state.payload[target]} onChange={\r\n            partial(\r\n                (t, event) => {\r\n                    const localPayload = this.state.payload;\r\n                    localPayload[t] = event.target.value;\r\n                    this.setState({localPayload});\r\n                }, target)\r\n        }/>\r\n    }\r\n\r\n    _createInputList(target) {\r\n        if (this.state.payload[target].slice(-1)[0] !== \"\") {\r\n            const localPayload = this.state.payload;\r\n            localPayload[target].push(\"\");\r\n            this.setState({localPayload});\r\n        }\r\n        return this.state.payload[target].map((element, i) => (\r\n            <input type=\"text\" value={element} onChange={\r\n                partial(\r\n                    (t, event) => {\r\n                        const localPayload = this.state.payload;\r\n                        localPayload[t][i] = event.target.value;\r\n                        this.setState({localPayload});\r\n                    }, target)\r\n            }/>))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"add-a-recipe\">\r\n                <form>\r\n                    Name:\r\n                    {this._createInput(\"title\")}\r\n                    <br/>\r\n                    Time to Cook:\r\n                    {this._createInput(\"cook_time\")}\r\n                    <br/>\r\n                    Image:\r\n                    <input type=\"file\"/>\r\n                    <br/>\r\n                    <section>\r\n                        Ingredients:\r\n                        <br/>\r\n                        {this._createInputList(\"ingredients\")}\r\n                        <br/>\r\n                        Steps:\r\n                        <br/>\r\n                        {this._createInputList(\"steps\")}\r\n                    </section>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport {AddARecipe};","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport {Recipe} from \"./recipe\";\r\nimport {HomeScreen} from \"./home-screen\";\r\nimport {Nav} from \"./nav\";\r\nimport {TopBar} from \"./top-bar\";\r\nimport {AddARecipe} from \"./add-a-recipe\";\r\n\r\nexport const pages = {\r\n    home: \"Home\",\r\n    recipe: \"Recipe\",\r\n    addARecipe: \"Add A Recipe\"\r\n};\r\n\r\nexport function partial(fn /*, args...*/) {\r\n    // A reference to the Array#slice method.\r\n    const slice = Array.prototype.slice;\r\n    // Convert arguments object to an array, removing the first argument.\r\n    const args = slice.call(arguments, 1);\r\n\r\n    return function() {\r\n        // Invoke the originally-specified function, passing in all originally-\r\n        // specified arguments, followed by any just-specified arguments.\r\n        return fn.apply(this, args.concat(slice.call(arguments, 0)));\r\n    };\r\n}\r\n\r\nclass App extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {page: pages.home};\r\n        this.changePage = this.changePage.bind(this);\r\n    }\r\n\r\n    _getPage() {\r\n        switch(this.state.page) {\r\n            case(pages.home):\r\n                return(<HomeScreen changePage={this.changePage}/>);\r\n            case(pages.recipe):\r\n                return(<Recipe {...this.state.pageState}/>);\r\n            case(pages.addARecipe):\r\n                return(<AddARecipe/>);\r\n            default:\r\n                return (<h1>{\"How did you get here\"}</h1>)\r\n        }\r\n    }\r\n\r\n    changePage(option, pageState = {}) {\r\n        this.setState({page: option, pageState})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app\">\r\n                <TopBar/>\r\n                <Nav navOptions={Object.values(pages)} changePage={this.changePage}/>\r\n                {this._getPage()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './add-a-recipe.css';\r\nimport './recipe.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}